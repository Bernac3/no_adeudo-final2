te voy a pasar codigo, de momento no agas nada:
lista-admin.component.html:

<div class="container mt-5 home-container">
  <div class="card">
    <div class="card-header bg-primary text-white text-center">
      <h2>Formato No-Adeudo</h2>
    </div>
    <div class="card-body">
      <div class="d-flex gap-2 my-3">
        <div class="dropdown">
          <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
            Ordenar por:
          </button>
          <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <li><a class="dropdown-item" href="#" (click)="ordenarAlumnos('nombre-asc', $event)">Nombre A-Z</a></li>
            <li><a class="dropdown-item" href="#" (click)="ordenarAlumnos('nombre-desc', $event)">Nombre Z-A</a></li>
            <li><a class="dropdown-item" href="#" (click)="ordenarAlumnos('nuevos', $event)">Nuevas Peticiones</a></li>
            <li><a class="dropdown-item" href="#" (click)="ordenarAlumnos('viejos', $event)">Antiguas Peticiones</a></li>
          </ul>
        </div>

        <form class="d-flex" style="width: 50%;" role="search">
          <input class="form-control me-2" type="search" placeholder="Buscar..." aria-label="Search" [formControl]="searchTermControl">
          <button class="btn btn-outline-success" type="submit">Buscar</button>
        </form>
      </div>

      <!-- Contenedor para aplicar el scroll solo a la tabla -->
      <div class="table-responsive flex-grow-1" style="overflow-y: auto; height: calc(100vh - 350px);">
        <table class="table table-bordered">
          <thead>
            <tr>
              <th scope="col">NOMBRE</th>
              <th scope="col">CORREO ELECTRÓNICO</th>
              <th scope="col">TEL</th>
              <th scope="col">No. DE CONTROL</th>
              <th scope="col">Fecha de Registro</th>
              <th scope="col">Adeudo Actual</th>
              <th scope="col">Ventana</th>
            </tr>
          </thead>
          <tbody>
            <tr *ngFor="let alumno of alumnosConPeticiones">
              <td class="p-2">{{ alumno.nombre_completo }}</td>
              <td class="p-2">{{ alumno.correo }}</td>
              <td class="p-2">{{ alumno.telefono }}</td>
              <td class="p-2">{{ alumno.no_control }}</td>
              <td class="p-2">{{ alumno.fecha_registro | date:'dd/MM/yyyy' }}</td>
              <td class="p-2">{{ alumno.estatus_administracion_y_finanzas }}</td>
              <td class="p-2">
                <button type="button" class="btn btn-primary ver-alumno"
                        data-bs-toggle="modal" data-bs-target="#alumnoModal"
                        (click)="cargarDatosModal(alumno)">
                  Ver Alumno
                </button>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div class="toast position-fixed top-0 end-0 m-3" role="alert" id="toastMessage" aria-live="assertive" aria-atomic="true" style="z-index: 1050; display: none;">
    <div class="toast-header">
      <strong class="me-auto text-success">Éxito</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Datos guardados con éxito.
    </div>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="alumnoModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="alumnoModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Detalles del Alumno</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <!-- Columna Izquierda -->
          <!-- Columna Izquierda -->
<div class="col-3">
  <!-- Imagen -->
  <div class="mb-3 text-center">
    <img src="path/to/image.jpg" alt="Foto del alumno" class="img-fluid rounded" id="alumnoFoto">
  </div>
  <!-- Campos con Input y Botón -->
  <div class="mb-3">
    <div class="input-group">
      <input type="text" class="form-control" id="campoNombre" placeholder="Nombre">
      <button class="btn btn-primary" type="button"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0"/>
        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z"/>
      </svg></button>
    </div>
  </div>
  <div class="mb-3">
    <div class="input-group">
      <input type="email" class="form-control" id="campoCorreo" placeholder="Correo">
      <button class="btn btn-primary" type="button"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0"/>
        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z"/>
      </svg></button>
    </div>
  </div>
  <div class="mb-3">
    <div class="input-group">
      <input type="tel" class="form-control" id="campoTelefono" placeholder="Teléfono">
      <button class="btn btn-primary" type="button"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0"/>
        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z"/>
      </svg></button>
    </div>
  </div>
  <div class="mb-3">
    <div class="input-group">
      <input type="text" class="form-control" id="campoControl" placeholder="No. Control">
      <button class="btn btn-primary" type="button"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0"/>
        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z"/>
      </svg></button>
    </div>
  </div>
  <div class="mb-3">
    <div class="input-group">
      <input type="text" class="form-control" id="campoDepartamento" placeholder="Departamento">
      <button class="btn btn-primary" type="button"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0"/>
        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z"/>
      </svg></button>
    </div>
  </div>
  <div class="mb-3">
    <div class="input-group">
      <input type="text" class="form-control" id="campoDepartamento" placeholder="Contraseña">
      <button class="btn btn-primary" type="button"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0"/>
        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z"/>
      </svg></button>
    </div>
  </div>
  <!-- Botones -->
  <div class="d-grid gap-2">
    <button type="button" class="btn btn-primary" id="guardarCambios">Guardar</button>
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
  </div>
</div>
          <!-- Columna Derecha -->
          <div class="col-9">
            <!-- Tabla -->
            <table class="table table-bordered table-hover">
              <thead class="bg-primary text-white">
                <tr>
                  <th>Departamento</th>
                  <th>Estatus</th>
                  <th>Comentarios</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td class="align-middle">Administración y Finanzas</td>
                  <td class="align-middle text-center">
                    <div class="dropdown">
                      <button
                        class="btn btn-primary dropdown-toggle"
                        type="button"
                        id="estatusDropdown1"
                        data-bs-toggle="dropdown"
                        aria-expanded="false"
                      >
                        Pendiente
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="estatusDropdown1">
                        <li><a class="dropdown-item" href="#">Pendiente</a></li>
                        <li><a class="dropdown-item" href="#">Con Adeudo</a></li>
                        <li><a class="dropdown-item" href="#">Sin Adeudo</a></li>
                      </ul>
                    </div>
                  </td>
                  <td>
                    <div class="textarea-container">
                      <textarea id="campoComentarios1" class="form-control shadow-sm" rows="2" placeholder="Escribe aquí..."></textarea>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td class="align-middle">Centro de Información</td>
                  <td class="align-middle text-center">
                    <div class="dropdown">
                      <button
                        class="btn btn-primary dropdown-toggle"
                        type="button"
                        id="estatusDropdown2"
                        data-bs-toggle="dropdown"
                        aria-expanded="false"
                      >
                        Pendiente
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="estatusDropdown2">
                        <li><a class="dropdown-item" href="#">Pendiente</a></li>
                        <li><a class="dropdown-item" href="#">Con Adeudo</a></li>
                        <li><a class="dropdown-item" href="#">Sin Adeudo</a></li>
                      </ul>
                    </div>
                  </td>
                  <td>
                    <div class="textarea-container">
                      <textarea id="campoComentarios2" class="form-control shadow-sm" rows="2" placeholder="Escribe aquí..."></textarea>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td class="align-middle">Centro de Cómputo</td>
                  <td class="align-middle text-center">
                    <div class="dropdown">
                      <button
                        class="btn btn-primary dropdown-toggle"
                        type="button"
                        id="estatusDropdown3"
                        data-bs-toggle="dropdown"
                        aria-expanded="false"
                      >
                        Pendiente
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="estatusDropdown3">
                        <li><a class="dropdown-item" href="#">Pendiente</a></li>
                        <li><a class="dropdown-item" href="#">Con Adeudo</a></li>
                        <li><a class="dropdown-item" href="#">Sin Adeudo</a></li>
                      </ul>
                    </div>
                  </td>
                  <td>
                    <div class="textarea-container">
                      <textarea id="campoComentarios3" class="form-control shadow-sm" rows="2" placeholder="Escribe aquí..."></textarea>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td class="align-middle">Recursos Materiales</td>
                  <td class="align-middle text-center">
                    <div class="dropdown">
                      <button
                        class="btn btn-primary dropdown-toggle"
                        type="button"
                        id="estatusDropdown3"
                        data-bs-toggle="dropdown"
                        aria-expanded="false"
                      >
                        Pendiente
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="estatusDropdown3">
                        <li><a class="dropdown-item" href="#">Pendiente</a></li>
                        <li><a class="dropdown-item" href="#">Con Adeudo</a></li>
                        <li><a class="dropdown-item" href="#">Sin Adeudo</a></li>
                      </ul>
                    </div>
                  </td>
                  <td>
                    <div class="textarea-container">
                      <textarea id="campoComentarios3" class="form-control shadow-sm" rows="2" placeholder="Escribe aquí..."></textarea>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td class="align-middle">Departamento de Vinculación</td>
                  <td class="align-middle text-center">
                    <div class="dropdown">
                      <button
                        class="btn btn-primary dropdown-toggle"
                        type="button"
                        id="estatusDropdown3"
                        data-bs-toggle="dropdown"
                        aria-expanded="false"
                      >
                        Pendiente
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="estatusDropdown3">
                        <li><a class="dropdown-item" href="#">Pendiente</a></li>
                        <li><a class="dropdown-item" href="#">Con Adeudo</a></li>
                        <li><a class="dropdown-item" href="#">Sin Adeudo</a></li>
                      </ul>
                    </div>
                  </td>
                  <td>
                    <div class="textarea-container">
                      <textarea id="campoComentarios3" class="form-control shadow-sm" rows="2" placeholder="Escribe aquí..."></textarea>
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>


        </div>
      </div>
    </div>
  </div>
</div>
















te voy a pasar codigo, de momento no agas nada:


lista-admin.component.ts:
import { Component, OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { debounceTime } from 'rxjs/operators';  // Importar el operador debounceTime
import { AuthService } from '../../../../service/auth.service';
import { Alumno as Usuario } from '../../../../interfaces/alumno.interface';
import { PeticionesService } from '../../../../service/peticion.service';

@Component({
  selector: 'app-lista-admin',
  templateUrl: './lista-admin.component.html',
  styleUrl: './lista-admin.component.css'
})
export class ListaAdminComponent implements OnInit {

  usuario: Usuario | null = null; // estos son los datos del usuario que inicio sesion

    alumnosConPeticiones: any[] = [];
    alumnosOriginales: any[] = [];

    searchTermControl: FormControl = new FormControl(''); // Crear un FormControl para el input de búsqueda

    adeudoEstado: string | null = null; // Puede ser 'Sin Adeudo', 'Con Adeudo' o null.

    // datos peticion
    alumnoComentario: string = ''

    constructor(private authService: AuthService, private peticionesService: PeticionesService) {}

    ngOnInit(): void {
      this.authService.getAlumnosYPeticiones().subscribe(
        (data) => {
          this.alumnosConPeticiones = data;
          this.alumnosOriginales = [...data];  // Guardamos una copia de los datos completos
          console.log('Datos de alumnos con peticiones:', this.alumnosConPeticiones);
        },
        (error) => {
          console.error('Error al obtener los datos de los alumnos:', error);
        }
      );

      // Aplicar debounceTime al control de búsqueda
      this.searchTermControl.valueChanges.pipe(
        debounceTime(1000)  // Esperar 1 segundo después de la última escritura
      ).subscribe((searchTerm) => {
        this.buscarAlumnos(searchTerm);  // Ejecutar la búsqueda automáticamente
      });

      // Obtener los datos del Usuaro Departamento
      this.authService.getUser().subscribe((data) => {
        this.usuario = data; // Asignamos los datos del alumno
        console.log(`Datos List.component: User: ${this.usuario?.usuario} Departamento: ${this.usuario?.departamento_id}`)
      });
    }

    cargarDatosModal(alumno: any): void {
      const alumnoNombre = document.getElementById('alumnoNombre');
      const alumnoCorreo = document.getElementById('alumnoCorreo');
      const alumnoTelefono = document.getElementById('alumnoTelefono');
      const alumnoNoControl = document.getElementById('alumnoNoControl');
      const alumnoFechaRegistro = document.getElementById('alumnoFechaRegistro');
      const alumnoFoto = document.getElementById('alumnoFoto') as HTMLImageElement;

      if (alumnoNombre) alumnoNombre.textContent = alumno.nombre_completo;
      if (alumnoCorreo) alumnoCorreo.textContent = alumno.correo;
      if (alumnoTelefono) alumnoTelefono.textContent = alumno.telefono;
      if (alumnoNoControl) alumnoNoControl.textContent = alumno.no_control;
      if (alumnoFechaRegistro) {
        const fecha = new Date(alumno.fecha_registro);
        alumnoFechaRegistro.textContent = `${fecha.getDate().toString().padStart(2, '0')}/${(fecha.getMonth() + 1)
          .toString()
          .padStart(2, '0')}/${fecha.getFullYear()}`;
      }

      if (alumnoFoto) {
        alumnoFoto.src = `http://localhost:3000/uploads/${alumno.foto}`;
      }

      // switch aqui
      switch (this.usuario?.departamento_id) {
        case 'administracion_finanzas':
          this.alumnoComentario = alumno.comentario_administracion_y_finanzas;
          break;
        case 'centro_informacion':
          this.alumnoComentario = alumno.centro_informacion;
        break;
        case 'centro_computo':
          this.alumnoComentario = alumno.centro_computo;
        break;
        case 'recursos_materiales':
          this.alumnoComentario = alumno.recursos_materiales;
        break;
        case 'departamento_vinculacion':
          this.alumnoComentario = alumno.departamento_vinculacion;
        break;
      }

      // Asignar el comentario del alumno al campo del modal
      //this.alumnoComentario = alumno.comentario_administracion_y_finanzas || ''; // Asume que 'comentario' está en los datos del alumno.
    }

    clearComment(): void {
      this.alumnoComentario = ''; // Limpia el comentario cuando el textarea recibe enfoque.
    }


    ordenarAlumnos(opcion: string, event: Event): void {
      event.preventDefault();
      switch(opcion) {
        case 'nombre-asc':
          this.alumnosConPeticiones.sort((a, b) => a.nombre_completo.localeCompare(b.nombre_completo));
          break;
        case 'nombre-desc':
          this.alumnosConPeticiones.sort((a, b) => b.nombre_completo.localeCompare(a.nombre_completo));
          break;
        case 'nuevos':
          this.alumnosConPeticiones.sort((a, b) => new Date(b.fecha_registro).getTime() - new Date(a.fecha_registro).getTime());
          break;
        case 'viejos':
          this.alumnosConPeticiones.sort((a, b) => new Date(a.fecha_registro).getTime() - new Date(b.fecha_registro).getTime());
          break;
      }
    }

    // Función para realizar la búsqueda automática
    buscarAlumnos(searchTerm: string): void {
      if (searchTerm) {
        this.alumnosConPeticiones = this.alumnosOriginales.filter(alumno => {
          const nombreValido = alumno.nombre_completo ? alumno.nombre_completo.toLowerCase() : '';
          const noControlValido = alumno.no_control ? alumno.no_control.toLowerCase() : '';
          const correoValido = alumno.correo ? alumno.correo.toLowerCase() : '';

          return nombreValido.includes(searchTerm.toLowerCase()) ||
                 noControlValido.includes(searchTerm.toLowerCase()) ||
                 correoValido.includes(searchTerm.toLowerCase());
        });
      } else {
        this.alumnosConPeticiones = [...this.alumnosOriginales];
      }
    }

    // Funcion para Establecer Campo Adeudo a Alumno
    setEstadoAdeudoAlumno(): void {
      const alumnoNoControl = document.getElementById('alumnoNoControl')?.textContent

      console.log('comentario: ' + this.alumnoComentario)
      const usuarioDepartamento = this.usuario?.usuario
      const usuarioDepartamentoId = this.usuario?.departamento_id

      let peticionEstatus;

      switch (this.usuario?.departamento_id) {
        case 'administracion_finanzas':
          peticionEstatus = 'estatus_administracion_y_finanzas';
          break;
        case 'centro_informacion':
          peticionEstatus = 'estatus_centro_de_informacion';
          break;
        case 'centro_computo':
          peticionEstatus = 'estatus_centro_de_computo';
          break;
        case 'recursos_materiales':
          peticionEstatus = 'estatus_recursos_materiales';
          break;
        case 'departamento_vinculacion':
          peticionEstatus = 'estatus_departamento_de_vinculacion';
          break;
      }
      // Datos del Alumno y Usuario para hacer la insercion
      console.log('-----Datos-----')
      console.log(`
        No_control: ${alumnoNoControl}
        Peticion_Estatus: ${peticionEstatus}
        Estado_adeudo ${this.adeudoEstado}
        Comentario : ${this.alumnoComentario}

        Usuario_Departamento: ${usuarioDepartamento}
        Usuario_Departamento_id: ${usuarioDepartamentoId}
        `)

      this.guardarDatosEstado();
        const alumnoComentario = this.alumnoComentario
        const datos = {
          alumnoNoControl, // No de control de alumno, usalo para saber donde insertar en la tabla peticiones (esta dato no se inserta, es solo para referencia)
          peticionEstatus, // Este es el nombre de la columna donde se insertara el dato de adeudoEstado ej: este dato se llama estatus_administracion_y_finanzas y el dato de adeudo se insertarea en esta col
          adeudoEstado: this.adeudoEstado, // Este es el valor que ira en el col peticionEstatus(ej: estatus_administracion_y_finanzas, estatos_centro_de_informacion)
          usuarioDepartamento, // Este es el nombre del usuario De Departamento Logeado actualmente (este dato nos sirve como comporovacion para insertar los datos)
          usuarioDepartamentoId,
          alumnoComentario

          // Este nos pertime saber que tipo de usuaro Departamento es ej: si es administracion_finanzas, el solo puede modificar de la tabla peticiones
          // estatus_administracion_y_finanzas
          // resumiendo, alumnoNoControl = para saber la fila a modificar de peticiones, peticionEstatus = nombre de la col de peticiones, adeudoEstado = valor a insertar en peticionEstatus
          // usuarioDepartamento = nombre del ususario de departamento logeado y usuarioDepartamentId = tipo de usuario de departamento: de estos son 5 tipos en total:
          // administracion_finanzas, centro_informacion, centro_computo, recursos_materiales, departamento_vinculacion
        };
        console.log(datos)

        this.peticionesService.insertarPeticion(datos).subscribe(
          response => {
            console.log('Peticon insertada correctamente')
          },
          error => {
            console.log('Error al insertar peticion')
          }
        )
      this.adeudoEstado = ''
  }


  guardarDatosEstado(): void {
    const etiquetaEstado = document.getElementById('etiquetaEstado'); // <p> completo
    const etiquetaEstadoSpan = document.getElementById('etiquetaEstadoSpan'); // <span> específico


    console.log(this.adeudoEstado)
    if (etiquetaEstado && etiquetaEstadoSpan && this.adeudoEstado) {
      // Configurar texto del span
      etiquetaEstadoSpan.textContent = this.adeudoEstado;

      // Remover clases previas
      etiquetaEstadoSpan.classList.remove('text-success', 'text-danger');

      // Agregar clase según el estado
      if (this.adeudoEstado === 'Con Adeudo') {
        etiquetaEstadoSpan.classList.add('text-danger');
      } else {
        etiquetaEstadoSpan.classList.add('text-success');
      }

      // Mostrar la etiqueta principal
      etiquetaEstado.classList.remove('d-none'); // Mostrar
      etiquetaEstado.classList.add('d-block');

      // Ocultar después de 3 segundos
      setTimeout(() => {
        etiquetaEstado.classList.remove('d-block'); // Ocultar
        etiquetaEstado.classList.add('d-none');
      }, 3000);
    }
     // default para los botones
  }

  setConAdeudoAlumno(): void {
    this.adeudoEstado = 'Con Adeudo';
    console.log('Con adeudo seleccionado');
  }

  setSinAdeudoAlumno(): void {
    this.adeudoEstado = 'Sin Adeudo';
    console.log('Sin adeudo seleccionado');
  }
}










te voy a pasar codigo, de momento no agas nada:



peticiones.service.ts:

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class PeticionesService {
  private apiUrl = 'http://localhost:3000/api/insertar-peticion';  // API de inserción de peticiones

  constructor(private http: HttpClient) {}

  insertarPeticion(datos: any): Observable<any> {
    console.log('Datos enviados para insertar la petición:', datos);  // Log de los datos que se envían
    return this.http.post(`${this.apiUrl}`, datos);
  }
}

server.js: esta ruta solo es la ruta que usa este codigo que te estoy pasando:
app.post('/api/insertar-peticion', (req, res) => {
  const {
    alumnoNoControl,
    peticionEstatus,
    adeudoEstado,
    usuarioDepartamento,
    usuarioDepartamentoId,
    alumnoComentario // Se añade el comentario
  } = req.body;

  // Verificar si el alumno existe
  const queryAlumno = `SELECT * FROM alumnos WHERE no_control = ?`;
  db.query(queryAlumno, [alumnoNoControl], (err, alumnoResults) => {
    if (err) {
      console.error('Error al verificar el alumno:', err);
      return res.status(500).json({ error: 'Error al verificar el alumno' });
    }

    if (alumnoResults.length === 0) {
      return res.status(404).json({ error: 'Alumno no encontrado' });
    }

    // Verificar si el usuario del departamento existe y tiene el rol adecuado
    const queryDepartamento = `SELECT * FROM departamentos WHERE usuario = ? AND departamento_id = ?`;
    db.query(queryDepartamento, [usuarioDepartamento, usuarioDepartamentoId], (err, departamentoResults) => {
      if (err) {
        console.error('Error al verificar el departamento:', err);
        return res.status(500).json({ error: 'Error al verificar el departamento' });
      }

      if (departamentoResults.length === 0) {
        return res.status(404).json({ error: 'Departamento no encontrado o no tiene los permisos adecuados' });
      }

      // Determinar la columna de comentario basada en el departamento
      let columnaComentario = '';
      switch (usuarioDepartamentoId) {
        case 'administracion_finanzas':
          columnaComentario = 'comentario_administracion_y_finanzas';
          break;
        case 'centro_informacion':
          columnaComentario = 'comentario_centro_de_informacion';
          break;
        case 'centro_computo':
          columnaComentario = 'comentario_centro_de_computo';
          break;
        case 'recursos_materiales':
          columnaComentario = 'comentario_recursos_materiales';
          break;
        case 'departamento_vinculacion':
          columnaComentario = 'comentario_departamento_de_vinculacion';
          break;
        default:
          return res.status(400).json({ error: 'Departamento no válido' });
      }

      // Si todo es correcto, proceder a actualizar la tabla peticiones
      const queryUpdatePeticion = `
        UPDATE peticiones
        SET ${peticionEstatus} = ?, ${columnaComentario} = ?, estatus_peticion = 'Actualizado'
        WHERE no_control = ?
      `;

      // Ejecutar la consulta para actualizar el estado y el comentario
      db.query(queryUpdatePeticion, [adeudoEstado, alumnoComentario, alumnoNoControl], (err, result) => {
        if (err) {
          console.error('Error al actualizar la petición:', err);
          return res.status(500).json({ error: 'Error al actualizar la petición' });
        }

        res.status(200).json({ message: 'Petición actualizada correctamente' });
      });
    });
  });
});


lo que quiero hacer es lo siguiente; lo que hace el ts de list-admin.component.ts: es en traerce los datos de la db y a su ves hace una peticion al server para guardar los datos, anterior mente habia un modal que al dar click a un boton mostraba los datos del alumno (ver alumno),
ahora lo que quiero hacer es hacer exactamente lo mismo, en el html (list-admin.component.html) hay un modal, pero a diferencia del anterior, este tiene todos los datos del alumno, modifica el ts y el html para que los datos del alumno al que le doy click en el boton ver alumno de la
tabla, en el modal aparezcan todos sus datos, incluyendo los de estatus y comentarios.



